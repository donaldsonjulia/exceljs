{"version":3,"sources":["../../../../lib/stream/xlsx/worksheet-writer.js"],"names":["_","require","RelType","colCache","Dimensions","StringBuf","Row","Column","SheetRelsWriter","DataValidations","xmlBuffer","ListXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","ColXform","RowXform","HyperlinkXform","SheetViewXform","PageMarginsXform","HeaderFooterXform","PageSetupXform","AutoFilterXform","PictureXform","xform","dataValidations","sheetProperties","sheetFormatProperties","columns","tag","length","childXform","row","hyperlinks","sheetViews","pageMargins","headerFooter","pageSeteup","autoFilter","picture","WorksheetWriter","module","exports","options","id","name","state","_rows","_columns","_keys","_merges","add","_sheetRelsWriter","_dimensions","_rowZero","committed","_formulae","_siFormulae","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","rowBreaks","colBreaks","useSharedStrings","_workbook","workbook","_views","views","_writeOpenWorksheet","background","type","imageName","addMedia","pictureId","Target","Type","Image","_background","rId","startedData","prototype","stream","_stream","_openStream","pause","destroy","Error","commit","forEach","cRow","_writeRow","_writeOpenSheetData","_writeCloseSheetData","_writeAutoFilter","_writeMergeCells","_writeHyperlinks","_writeDataValidations","_writePageMargins","_writePageSetup","_writeHeaderFooter","_writeBackground","_writeCloseWorksheet","end","dimensions","value","_headerRowCount","reduce","pv","cv","headerCount","headers","Math","max","count","column","push","defn","getColumnKey","key","setColumnKey","deleteColumnKey","eachColumnKey","f","each","getColumn","c","col","l2n","n","_nextRow","eachRow","iteratee","includeEmpty","i","getRow","hasValues","number","_commitRow","found","shift","lastRow","findRow","rowNumber","index","addRow","values","findCell","r","address","getAddress","getCell","getCellEx","mergeCells","Array","slice","call","arguments","merge","intersects","master","j","_write","text","reset","addText","write","_writeSheetProperties","xmlBuf","sheetPropertiesModel","outlineProperties","tabColor","toXml","_writeSheetFormatProperties","sheetFormatPropertiesModel","_writeColumns","cols","toModel","prepare","styles","height","model","sharedStrings","hyperlinksProxy","merges","formulae","siFormulae","_hyperlinks","_writeDimensions"],"mappings":"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","file":"worksheet-writer.js","sourcesContent":["/**\n * Copyright (c) 2015-2017 Guyon Roche\n * LICENCE: MIT - please refer to LICENCE file included with this module\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\n */\n\n'use strict';\n\nvar _ = require('../../utils/under-dash');\n\nvar RelType = require('../../xlsx/rel-type');\n\nvar colCache = require('../../utils/col-cache');\nvar Dimensions = require('../../doc/range');\n\nvar StringBuf = require('../../utils/string-buf');\n\nvar Row = require('../../doc/row');\nvar Column = require('../../doc/column');\n\nvar SheetRelsWriter = require('./sheet-rels-writer');\nvar DataValidations = require('../../doc/data-validations');\n\nvar xmlBuffer = new StringBuf();\n\n// ============================================================================================\n// Xforms\nvar ListXform = require('../../xlsx/xform/list-xform');\nvar DataValidationsXform = require('../../xlsx/xform/sheet/data-validations-xform');\nvar SheetPropertiesXform = require('../../xlsx/xform/sheet/sheet-properties-xform');\nvar SheetFormatPropertiesXform = require('../../xlsx/xform/sheet/sheet-format-properties-xform');\nvar ColXform = require('../../xlsx/xform/sheet/col-xform');\nvar RowXform = require('../../xlsx/xform/sheet/row-xform');\nvar HyperlinkXform = require('../../xlsx/xform/sheet/hyperlink-xform');\nvar SheetViewXform = require('../../xlsx/xform/sheet/sheet-view-xform');\nvar PageMarginsXform = require('../../xlsx/xform/sheet/page-margins-xform');\nvar HeaderFooterXform = require('../../xlsx/xform/sheet/header-footer-xform');\nvar PageSetupXform = require('../../xlsx/xform/sheet/page-setup-xform');\nvar AutoFilterXform = require('../../xlsx/xform/sheet/auto-filter-xform');\nvar PictureXform = require('../../xlsx/xform/sheet/picture-xform');\n\n// since prepare and render is functional, we can use singletons\nvar xform = {\n  dataValidations: new DataValidationsXform(),\n  sheetProperties: new SheetPropertiesXform(),\n  sheetFormatProperties: new SheetFormatPropertiesXform(),\n  columns: new ListXform({tag: 'cols', length: false, childXform: new ColXform()}),\n  row: new RowXform(),\n  hyperlinks: new ListXform({tag: 'hyperlinks', length: false, childXform: new HyperlinkXform()}),\n  sheetViews: new ListXform({tag: 'sheetViews', length: false, childXform: new SheetViewXform()}),\n  pageMargins: new PageMarginsXform(),\n  headerFooter: new HeaderFooterXform(),\n  pageSeteup: new PageSetupXform(),\n  autoFilter: new AutoFilterXform(),\n  picture: new PictureXform(),\n};\n\n\n// ============================================================================================\n\nvar WorksheetWriter = module.exports = function(options) {\n  // in a workbook, each sheet will have a number\n  this.id = options.id;\n\n  // and a name\n  this.name = options.name || 'Sheet' + this.id;\n\n  // add a state\n  this.state = options.state || 'visible';\n\n  // rows are stored here while they need to be worked on.\n  // when they are committed, they will be deleted.\n  this._rows = [];\n\n  // column definitions\n  this._columns = null;\n\n  // column keys (addRow convenience): key ==> this._columns index\n  this._keys = {};\n\n  // keep record of all merges\n  this._merges = [];\n  this._merges.add = function() {}; // ignore cell instruction\n\n  // keep record of all hyperlinks\n  this._sheetRelsWriter = new SheetRelsWriter(options);\n\n  // keep a record of dimensions\n  this._dimensions = new Dimensions();\n\n  // first uncommitted row\n  this._rowZero = 1;\n\n  // committed flag\n  this.committed = false;\n\n  // for data validations\n  this.dataValidations = new DataValidations();\n\n  // for sharing formulae\n  this._formulae = {};\n  this._siFormulae = 0;\n\n  // for default row height, outline levels, etc\n  this.properties = Object.assign({}, {\n    defaultRowHeight: 15,\n    dyDescent: 55,\n    outlineLevelCol: 0,\n    outlineLevelRow: 0\n  }, options.properties);\n\n  // for all things printing\n  this.pageSetup = Object.assign({}, {\n    margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3 },\n    orientation: 'portrait',\n    horizontalDpi: 4294967295,\n    verticalDpi: 4294967295,\n    fitToPage: !!(options.pageSetup && ((options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) && !options.pageSetup.scale)),\n    pageOrder: 'downThenOver',\n    blackAndWhite: false,\n    draft: false,\n    cellComments: 'None',\n    errors: 'displayed',\n    scale: 100,\n    fitToWidth: 1,\n    fitToHeight: 1,\n    paperSize: undefined,\n    showRowColHeaders: false,\n    showGridLines: false,\n    horizontalCentered: false,\n    verticalCentered: false,\n    rowBreaks: null,\n    colBreaks: null\n  }, options.pageSetup);\n\n  // using shared strings creates a smaller xlsx file but may use more memory\n  this.useSharedStrings = options.useSharedStrings || false;\n\n  this._workbook = options.workbook;\n\n  // views\n  this._views = options.views || [];\n\n  // auto filter\n  this.autoFilter = options.autoFilter || null;\n\n  // start writing to stream now\n  this._writeOpenWorksheet();\n\n  // background\n  if (options.background && options.background.type === 'image') {\n    var imageName = this._workbook.addMedia(options.background);\n    var pictureId = this._sheetRelsWriter.addMedia({\n      Target: '../media/' + imageName,\n      Type: RelType.Image\n    });\n    this._background = {\n      rId: pictureId\n    };\n  }\n\n  this.startedData = false;\n};\n\nWorksheetWriter.prototype = {\n  get workbook() {\n    return this._workbook;\n  },\n\n  get stream() {\n    if (!this._stream) {\n      // eslint-disable-next-line no-underscore-dangle\n      this._stream = this._workbook._openStream('/xl/worksheets/sheet' + this.id + '.xml');\n\n      // pause stream to prevent 'data' events\n      this._stream.pause();\n    }\n    return this._stream;\n  },\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy: function() {\n    throw new Error('Invalid Operation: destroy');\n  },\n\n  commit: function() {\n    if (this.committed) {\n      return;\n    }\n    // commit all rows\n    this._rows.forEach(cRow => {\n      if (cRow) {\n        // write the row to the stream\n        this._writeRow(cRow);\n      }\n    });\n\n    // we _cannot_ accept new rows from now on\n    this._rows = null;\n\n    if (!this.startedData) {\n        this._writeOpenSheetData();\n    }\n    this._writeCloseSheetData();\n    this._writeAutoFilter();\n    this._writeMergeCells();\n\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // this._writeDimensions();\n\n    this._writeHyperlinks();\n    this._writeDataValidations();\n    this._writePageMargins();\n    this._writePageSetup();\n    this._writeHeaderFooter();\n    this._writeBackground();\n    this._writeCloseWorksheet();\n\n    // signal end of stream to workbook\n    this.stream.end();\n\n    // also commit the hyperlinks if any\n    this._sheetRelsWriter.commit();\n\n    this.committed = true;\n  },\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  },\n\n  get views() {\n    return this._views;\n  },\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  },\n\n  // set the columns from an array of column definitions.\n  // Note: any headers defined will overwrite existing values.\n  set columns(value) {\n    // calculate max header row count\n    this._headerRowCount = value.reduce((pv, cv) => {\n      var headerCount =\n        (cv.header && 1) ||\n        (cv.headers && cv.headers.length) ||\n        0;\n      return Math.max(pv, headerCount);\n    }, 0);\n\n    // construct Column objects\n    var count = 1;\n    var columns = this._columns = [];\n    value.forEach(defn => {\n      var column = new Column(this, count++, false);\n      columns.push(column);\n      column.defn = defn;\n    });\n  },\n\n  getColumnKey(key) {\n    return this._keys[key];\n  },\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  },\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  },\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  },\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn: function(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      var col = this._keys[c];\n      if (col) return col;\n\n      // otherwise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) { this._columns = []; }\n    if (c > this._columns.length) {\n      var n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  },\n\n  // =========================================================================\n  // Rows\n  get _nextRow() {\n    return this._rowZero + this._rows.length;\n  },\n\n  // iterate over every uncommitted row in the worksheet, including maybe empty rows\n  eachRow: function(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = undefined;\n    }\n    if (options && options.includeEmpty) {\n      var n = this._nextRow;\n      for (var i = this._rowZero; i < n; i++) {\n        iteratee(this.getRow(i), i);\n      }\n    } else {\n      this._rows.forEach(function(row) {\n        if (row.hasValues) {\n          iteratee(row, row.number);\n        }\n      });\n    }\n  },\n\n  _commitRow: function(cRow) {\n    // since rows must be written in order, we commit all rows up till and including cRow\n    var found = false;\n    while (this._rows.length && !found) {\n      var row = this._rows.shift();\n      this._rowZero++;\n      if (row) {\n        this._writeRow(row);\n        found = (row.number === cRow.number);\n        this._rowZero = row.number + 1;\n      }\n    }\n  },\n\n  get lastRow() {\n    // returns last uncommitted row\n    if (this._rows.length) {\n      return this._rows[this._rows.length - 1];\n    }\n    return undefined;\n  },\n\n  // find a row (if exists) by row number\n  findRow: function(rowNumber) {\n    var index = rowNumber - this._rowZero;\n    return this._rows[index];\n  },\n\n  getRow: function(rowNumber) {\n    var index = rowNumber - this._rowZero;\n\n    // may fail if rows have been comitted\n    if (index < 0) {\n      throw new Error('Out of bounds: this row has been committed');\n    }\n    var row = this._rows[index];\n    if (!row) {\n      this._rows[index] = row = new Row(this, rowNumber);\n    }\n    return row;\n  },\n\n  addRow: function(value) {\n    var row = new Row(this, this._nextRow);\n    this._rows[row.number - this._rowZero] = row;\n    row.values = value;\n    return row;\n  },\n\n  // ================================================================================\n  // Cells\n\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\n  findCell: function(r, c) {\n    var address = colCache.getAddress(r, c);\n    var row = this.findRow(address.row);\n    return row ? row.findCell(address.column) : undefined;\n  },\n\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\n  getCell: function(r, c) {\n    var address = colCache.getAddress(r, c);\n    var row = this.getRow(address.row);\n    return row.getCellEx(address);\n  },\n\n  mergeCells: function() {\n    // may fail if rows have been comitted\n    var dimensions = new Dimensions(Array.prototype.slice.call(arguments, 0)); // convert arguments into Array\n\n    // check cells aren't already merged\n    this._merges.forEach(function(merge) {\n      if (merge.intersects(dimensions)) {\n        throw new Error('Cannot merge already merged cells');\n      }\n    });\n\n    // apply merge\n    var master = this.getCell(dimensions.top, dimensions.left);\n    for (var i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (var j = dimensions.left; j <= dimensions.right; j++) {\n        if ((i > dimensions.top) || (j > dimensions.left)) {\n          this.getCell(i, j).merge(master);\n        }\n      }\n    }\n\n    // index merge\n    this._merges.push(dimensions);\n  },\n\n  // ================================================================================\n  _write: function(text) {\n    xmlBuffer.reset();\n    xmlBuffer.addText(text);\n    this.stream.write(xmlBuffer);\n  },\n  _writeSheetProperties: function(xmlBuf, properties, pageSetup) {\n    var sheetPropertiesModel = {\n      outlineProperties: properties && properties.outlineProperties,\n      tabColor: properties && properties.tabColor,\n      pageSetup: pageSetup && pageSetup.fitToPage ? {\n        fitToPage: pageSetup.fitToPage\n      } : undefined\n    };\n\n    xmlBuf.addText(xform.sheetProperties.toXml(sheetPropertiesModel));\n  },\n  _writeSheetFormatProperties: function(xmlBuf, properties) {\n    var sheetFormatPropertiesModel = properties ? {\n      defaultRowHeight: properties.defaultRowHeight,\n      dyDescent: properties.dyDescent,\n      outlineLevelCol: properties.outlineLevelCol,\n      outlineLevelRow: properties.outlineLevelRow\n    } : undefined;\n\n    xmlBuf.addText(xform.sheetFormatProperties.toXml(sheetFormatPropertiesModel));\n  },\n  _writeOpenWorksheet: function() {\n    xmlBuffer.reset();\n\n    xmlBuffer.addText('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>');\n    xmlBuffer.addText(\n      '<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"' +\n      ' xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"' +\n      ' xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"' +\n      ' mc:Ignorable=\"x14ac\"' +\n      ' xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">');\n\n    this._writeSheetProperties(xmlBuffer, this.properties, this.pageSetup);\n\n    xmlBuffer.addText(xform.sheetViews.toXml(this.views));\n\n    this._writeSheetFormatProperties(xmlBuffer, this.properties);\n\n    this.stream.write(xmlBuffer);\n  },\n  _writeColumns: function() {\n    var cols = Column.toModel(this.columns);\n    if (cols) {\n      xform.columns.prepare(cols, {styles: this._workbook.styles});\n      this.stream.write(xform.columns.toXml(cols));\n    }\n  },\n  _writeOpenSheetData: function() {\n    this._write('<sheetData>');\n  },\n  _writeRow: function(row) {\n    if (!this.startedData) {\n      this._writeColumns();\n      this._writeOpenSheetData();\n      this.startedData = true;\n    }\n\n    if (row.hasValues || row.height) {\n      var model = row.model;\n      var options = {\n        styles: this._workbook.styles,\n        sharedStrings: this.useSharedStrings ? this._workbook.sharedStrings : undefined,\n        hyperlinks: this._sheetRelsWriter.hyperlinksProxy,\n        merges: this._merges,\n        formulae: this._formulae,\n        siFormulae: this._siFormulae,\n      };\n      xform.row.prepare(model, options);\n      this.stream.write(xform.row.toXml(model));\n    }\n  },\n  _writeCloseSheetData: function() {\n    this._write('</sheetData>');\n  },\n  _writeMergeCells: function() {\n    if (this._merges.length) {\n      xmlBuffer.reset();\n      xmlBuffer.addText('<mergeCells count=\"' + this._merges.length + '\">');\n      this._merges.forEach(function(merge) {\n        xmlBuffer.addText('<mergeCell ref=\"' + merge + '\"/>');\n      });\n      xmlBuffer.addText('</mergeCells>');\n\n      this.stream.write(xmlBuffer);\n    }\n  },\n  _writeHyperlinks: function() {\n    // eslint-disable-next-line no-underscore-dangle\n    this.stream.write(xform.hyperlinks.toXml(this._sheetRelsWriter._hyperlinks));\n  },\n  _writeDataValidations: function() {\n    this.stream.write(xform.dataValidations.toXml(this.dataValidations.model));\n  },\n  _writePageMargins: function() {\n    this.stream.write(xform.pageMargins.toXml(this.pageSetup.margins));\n  },\n  _writePageSetup: function() {\n    this.stream.write(xform.pageSeteup.toXml(this.pageSetup));\n  },\n  _writeHeaderFooter: function() {\n    this.stream.write(xform.pageSeteup.toXml(this.pageSetup.headerFooter));\n  },\n  _writeAutoFilter: function() {\n    this.stream.write(xform.autoFilter.toXml(this.autoFilter));\n  },\n  _writeBackground: function() {\n    if (this._background) {\n      this.stream.write(xform.picture.toXml(this._background));\n    }\n  },\n  _writeDimensions: function() {\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // and we don't know the dimensions until the commit, so don't write them.\n    // this._write('<dimension ref=\"' + this._dimensions + '\"/>');\n  },\n  _writeCloseWorksheet: function() {\n    this._write('</worksheet>');\n  }\n};\n"]}