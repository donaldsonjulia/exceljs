{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/header-footer-xform.js"],"names":["utils","require","StringXform","BaseXform","HeaderFooterXform","module","exports","map","oddHeader","tag","oddFooter","inherits","render","xmlStream","model","openNode","header","odd","footer","closeNode","parseOpen","node","parser","xform","name","Error","JSON","stringify","parseText","text","parseClose","undefined"],"mappings":"AAAA;;AAEA,IAAIA,QAAQC,QAAQ,sBAAR,CAAZ;AACA,IAAIC,cAAcD,QAAQ,wBAAR,CAAlB;AACA,IAAIE,YAAYF,QAAQ,eAAR,CAAhB;;AAEA,IAAIG,oBAAoBC,OAAOC,OAAP,GAAiB,YAAW;AAClD,OAAKC,GAAL,GAAW;AACTC,eAAW,IAAIN,WAAJ,CAAgB,EAACO,KAAK,WAAN,EAAhB,CADF;AAETC,eAAW,IAAIR,WAAJ,CAAgB,EAACO,KAAK,WAAN,EAAhB;AAFF,GAAX;AAID,CALD;;AAOAT,MAAMW,QAAN,CAAeP,iBAAf,EAAkCD,SAAlC,EAA6C;;AAE3C,MAAIM,GAAJ,GAAU;AAAE,WAAO,cAAP;AAAwB,GAFO;;AAI3CG,UAAQ,gBAASC,SAAT,EAAoBC,KAApB,EAA2B;AACjC,QAAIA,KAAJ,EAAW;AACTD,gBAAUE,QAAV,CAAmB,KAAKN,GAAxB;AACA,UAAIK,MAAME,MAAN,IAAgBF,MAAME,MAAN,CAAaC,GAAjC,EAAsC;AACpC,aAAKV,GAAL,CAASC,SAAT,CAAmBI,MAAnB,CAA0BC,SAA1B,EAAqCC,MAAME,MAAN,CAAaC,GAAlD;AACD;AACD,UAAIH,MAAMI,MAAN,IAAgBJ,MAAMI,MAAN,CAAaD,GAAjC,EAAsC;AACpC,aAAKV,GAAL,CAASG,SAAT,CAAmBE,MAAnB,CAA0BC,SAA1B,EAAqCC,MAAMI,MAAN,CAAaD,GAAlD;AACD;AACDJ,gBAAUM,SAAV;AACD;AACF,GAf0C;;AAiB3CC,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAI,KAAKC,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYC,KAAZ,CAAkBH,SAAlB,CAA4BC,IAA5B;AACA,aAAO,IAAP;AACD;AACD,YAAQA,KAAKG,IAAb;AACE,WAAK,KAAKf,GAAV;AACE,aAAKK,KAAL,GAAa;AACX;AACA;AACAE,kBAAQ;AACNC,iBAAK,KAAKV,GAAL,CAASC,SAAT,CAAmBM;AADlB,WAHG;AAMXI,kBAAQ;AACND,iBAAK,KAAKV,GAAL,CAASG,SAAT,CAAmBI;AADlB;AANG,SAAb;AAUA,eAAO,IAAP;AACF;AACE,aAAKQ,MAAL,GAAc,KAAKf,GAAL,CAASc,KAAKG,IAAd,CAAd;AACA,YAAI,KAAKF,MAAT,EAAiB;AACf,eAAKA,MAAL,CAAYF,SAAZ,CAAsBC,IAAtB;AACA,iBAAO,IAAP;AACD;AACD,cAAM,IAAII,KAAJ,CAAU,uCAAuCC,KAAKC,SAAL,CAAeN,IAAf,CAAjD,CAAN;AAnBJ;AAqBD,GA3C0C;AA4C3CO,aAAW,mBAASC,IAAT,EAAe;AACxB,QAAI,KAAKP,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYM,SAAZ,CAAsBC,IAAtB;AACD;AACF,GAhD0C;AAiD3CC,cAAY,oBAASN,IAAT,EAAe;AACzB,QAAI,KAAKF,MAAT,EAAiB;AACf,UAAI,CAAC,KAAKA,MAAL,CAAYQ,UAAZ,CAAuBN,IAAvB,CAAL,EAAmC;AACjC,aAAKF,MAAL,GAAcS,SAAd;AACD;AACD,aAAO,IAAP;AACD;AACD,YAAQP,IAAR;AACE,WAAK,KAAKf,GAAV;AACE,aAAKK,KAAL,GAAa;AACXE,kBAAQ;AACNC,iBAAK,KAAKV,GAAL,CAASC,SAAT,CAAmBM;AADlB,WADG;AAIXI,kBAAQ;AACND,iBAAK,KAAKV,GAAL,CAASG,SAAT,CAAmBI;AADlB;AAJG,SAAb;AAQA,eAAO,KAAP;AACF;AACE,cAAM,IAAIW,KAAJ,CAAU,wCAAwCD,IAAlD,CAAN;AAZJ;AAcD;;AAtE0C,CAA7C","file":"header-footer-xform.js","sourcesContent":["'use strict';\n\nvar utils = require('../../../utils/utils');\nvar StringXform = require('../simple/string-xform');\nvar BaseXform = require('../base-xform');\n\nvar HeaderFooterXform = module.exports = function() {\n  this.map = {\n    oddHeader: new StringXform({tag: 'oddHeader'}),\n    oddFooter: new StringXform({tag: 'oddFooter'}),\n  };\n};\n\nutils.inherits(HeaderFooterXform, BaseXform, {\n\n  get tag() { return 'headerFooter'; },\n\n  render: function(xmlStream, model) {\n    if (model) {\n      xmlStream.openNode(this.tag);\n      if (model.header && model.header.odd) {\n        this.map.oddHeader.render(xmlStream, model.header.odd);\n      }\n      if (model.footer && model.footer.odd) {\n        this.map.oddFooter.render(xmlStream, model.footer.odd);\n      }\n      xmlStream.closeNode();\n    }\n  },\n\n  parseOpen: function(node) {\n    if (this.parser) {\n      this.parser.xform.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case this.tag:\n        this.model = {\n          // oddHeader: this.map.oddHeader.model,\n          // oddFooter: this.map.oddFooter.model,\n          header: {\n            odd: this.map.oddHeader.model\n          },\n          footer: {\n            odd: this.map.oddFooter.model\n          }\n        };\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        throw new Error('Unexpected xml node in parseOpen: ' + JSON.stringify(node));\n    }\n  },\n  parseText: function(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  },\n  parseClose: function(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        this.model = {\n          header: {\n            odd: this.map.oddHeader.model\n          },\n          footer: {\n            odd: this.map.oddFooter.model\n          }\n        };\n        return false;\n      default:\n        throw new Error('Unexpected xml node in parseClose: ' + name);\n    }\n  }\n\n});\n"]}